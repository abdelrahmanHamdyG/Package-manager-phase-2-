CREATE TABLE package (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    version VARCHAR NOT NULL,
    UNIQUE(name, version)
);

CREATE TABLE package_data (
    package_id INTEGER REFERENCES package(id) ON DELETE CASCADE,
    content TEXT,
    url VARCHAR,
    debloat BOOLEAN,
    js_program TEXT,
    CONSTRAINT package_data_content_or_url CHECK ((content IS NOT NULL) OR (url IS NOT NULL))
);

CREATE TABLE user_account (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL UNIQUE,
    is_admin BOOLEAN NOT NULL,
    password_hash TEXT NOT NULL
);
PackRegDB=> CREATE TABLE user_tokens (
    id SERIAL PRIMARY KEY,                    -- Unique identifier for each token entry
    user_id INTEGER REFERENCES user_account(id) ON DELETE CASCADE, -- Foreign key to user_account table
    token TEXT NOT NULL,                      -- The JWT token string
    expiration TIMESTAMP NOT NULL,            -- Expiration time of the token
    interaction_count INTEGER DEFAULT 0       -- Counter for tracking API interactions
);

CREATE TABLE package_cost (
    package_id INTEGER REFERENCES package(id) ON DELETE CASCADE,
    standalone_cost NUMERIC NOT NULL,
    total_cost NUMERIC NOT NULL,
    PRIMARY KEY(package_id)
);

CREATE TABLE package_dependencies (
    package_id INTEGER REFERENCES package(id) ON DELETE CASCADE,
    dependency_package_id INTEGER REFERENCES package(id) ON DELETE CASCADE,
    PRIMARY KEY(package_id, dependency_package_id)
);

CREATE TABLE package_rating (
    package_id INTEGER REFERENCES package(id) ON DELETE CASCADE,
    bus_factor NUMERIC DEFAULT -1,
    correctness NUMERIC DEFAULT -1,
    ramp_up NUMERIC DEFAULT -1,
    responsive_maintainer NUMERIC DEFAULT -1,
    license_score NUMERIC DEFAULT -1,
    good_pinning_practice NUMERIC DEFAULT -1,
    pull_request NUMERIC DEFAULT -1,
    net_score NUMERIC DEFAULT -1,
    bus_factor_latency NUMERIC DEFAULT -1,
    correctness_latency NUMERIC DEFAULT -1,
    ramp_up_latency NUMERIC DEFAULT -1,
    responsive_maintainer_latency NUMERIC DEFAULT -1,
    license_score_latency NUMERIC DEFAULT -1,
    good_pinning_practice_latency NUMERIC DEFAULT -1,
    pull_request_latency NUMERIC DEFAULT -1,
    net_score_latency NUMERIC DEFAULT -1,
    PRIMARY KEY(package_id)
);


CREATE TABLE package_history (
    id SERIAL PRIMARY KEY,
    package_id INTEGER REFERENCES package(id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES user_account(id),
    action VARCHAR CHECK (action IN ('CREATE', 'UPDATE', 'DOWNLOAD', 'RATE')),
    action_date TIMESTAMP DEFAULT NOW()
);

CREATE TABLE user_groups (
    id SERIAL PRIMARY KEY,
    group_name VARCHAR UNIQUE NOT NULL
);




INSERT INTO package (Name, Github_Url) VALUES ('shebl', 'www.sheblelshebl.com');
INSERT INTO package (Name, Github_Url) VALUES ('lion', 'www.lionellion.com');
INSERT INTO package (Name, Github_Url) VALUES ('cheetah', 'www.cheetahelcheetah.com');

INSERT INTO pack_version (Version, P_ID, Correctness, Responsiveness, Ramp_up, Bus_factor, License_metric) VALUES ('1.1.0', '1', 0.5, 0.3, 0.2, 0.7, 1);    
INSERT INTO pack_version (Version, P_ID, Correctness, Responsiveness, Ramp_up, Bus_factor, License_metric) VALUES ('1.1.5', '1', 0.4, 0.6, 0.2, 0.9, 1);
INSERT INTO pack_version (Version, P_ID, Correctness, Responsiveness, Ramp_up, Bus_factor, License_metric) VALUES ('1.1.0', '2', 0.9, 0.1, 0.2, 0.7, 0.5);
INSERT INTO pack_version (Version, P_ID, Correctness, Responsiveness, Ramp_up, Bus_factor, License_metric) VALUES ('1.1.7', '2', 0.8, 0.1, 0.2, 0.3, 0.5);
INSERT INTO pack_version (Version, P_ID, Correctness, Responsiveness, Ramp_up, Bus_factor, License_metric) VALUES ('1.1.1', '3', 0.7, 0.6, 0.2, 0.4, 1);
INSERT INTO pack_version (Version, P_ID, Correctness, Responsiveness, Ramp_up, Bus_factor, License_metric) VALUES ('1.1.8', '3', 0.3, 0.2, 0.1, 0.4, 0);